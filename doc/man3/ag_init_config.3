.\"
.\" Copyright 2021 Davidson Francis <davidsondfgl@gmail.com>
.\"
.\" Licensed under the Apache License, Version 2.0 (the "License");
.\" you may not use this file except in compliance with the License.
.\" You may obtain a copy of the License at
.\"
.\"    http://www.apache.org/licenses/LICENSE-2.0
.\"
.\" Unless required by applicable law or agreed to in writing, software
.\" distributed under the License is distributed on an "AS IS" BASIS,
.\" WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
.\" See the License for the specific language governing permissions and
.\" limitations under the License.
.\"
.TH man 3 "29 May 2021" "1.0" "libag man page"
.SH NAME
ag_init_config \- Initializes libag with user-supplied settings
.SH SYNOPSIS
.nf
.B #include <libag.h>
.sp
.BI "int ag_init_config(struct ag_config *" ag_config ");"
.fi
.SH DESCRIPTION
The
.BR ag_init_config ()
function initializes libag with user-supplied attributes specified by
.IR ag_config .
The structure
.I ag_config
defines a set of attributes that enables/disables and configure the
specific behavior of libag. The structure looks like:

.nf
	struct ag_config
	{
		int literal; /* enable/disable literal case search. */
		int stats; /* enable/disable search stats. */
		...
		(please refer to libag.h for a complete description)
	};
.fi

It is worth to note that all default values are 0, i.e: a zeroed
ag_config structure behaves exactly the same way as a simple call to
.BR ag_init ().

This allows the user to activate only the fields he/she deems necessary,
instead of all. Also note that this structure must be allocated by the
user, and therefore, it needs to be clean (without garbage values)
before being passed as a parameter.

.SH RETURN VALUE
Returns 0 if success, -1 otherwise.

.SH NOTES
User-defined settings can also be set anytime after
.BR ag_init ()
with
.BR ag_set_config ().

.SH SEE ALSO
.BR ag_set_config (3),
.BR ag_init (3),
.BR ag_finish (3),
.BR ag_search (3)

.SH AUTHOR
Davidson Francis (davidsondfgl@gmail.com)
